LL1_PARSING_TABLE = {('S', '$'): ('S', 'PROGRAM $'),
 ('S', 'def'): ('S', 'PROGRAM $'),
 ('S', 'ident'): ('S', 'PROGRAM $'),
 ('S', '{'): ('S', 'PROGRAM $'),
 ('S', ';'): ('S', 'PROGRAM $'),
 ('S', 'if'): ('S', 'PROGRAM $'),
 ('S', 'break'): ('S', 'PROGRAM $'),
 ('S', 'print'): ('S', 'PROGRAM $'),
 ('S', 'read'): ('S', 'PROGRAM $'),
 ('S', 'return'): ('S', 'PROGRAM $'),
 ('S', 'for'): ('S', 'PROGRAM $'),
 ('S', 'int'): ('S', 'PROGRAM $'),
 ('S', 'float'): ('S', 'PROGRAM $'),
 ('S', 'string'): ('S', 'PROGRAM $'),
 ('PROGRAM', '$'): ('PROGRAM', 'FUNCLIST'),
 ('PROGRAM', 'def'): ('PROGRAM', 'FUNCLIST'),
 ('PROGRAM', 'ident'): ('PROGRAM', 'STATEMENT'),
 ('PROGRAM', '{'): ('PROGRAM', 'STATEMENT'),
 ('PROGRAM', ';'): ('PROGRAM', 'STATEMENT'),
 ('PROGRAM', 'if'): ('PROGRAM', 'STATEMENT'),
 ('PROGRAM', 'break'): ('PROGRAM', 'STATEMENT'),
 ('PROGRAM', 'print'): ('PROGRAM', 'STATEMENT'),
 ('PROGRAM', 'read'): ('PROGRAM', 'STATEMENT'),
 ('PROGRAM', 'return'): ('PROGRAM', 'STATEMENT'),
 ('PROGRAM', 'for'): ('PROGRAM', 'STATEMENT'),
 ('PROGRAM', 'int'): ('PROGRAM', 'STATEMENT'),
 ('PROGRAM', 'float'): ('PROGRAM', 'STATEMENT'),
 ('PROGRAM', 'string'): ('PROGRAM', 'STATEMENT'),
 ('FUNCLIST', '$'): ('FUNCLIST', 'epslon'),
 ('FUNCLIST', 'def'): ('FUNCLIST', 'FUNCDEF FUNCLIST'),
 ('FUNCDEF', 'def'): ('FUNCDEF', 'def ident ( PARAMLIST ) { STATELIST }'),
 ('PARAMLIST', ')'): ('PARAMLIST', 'epslon'),
 ('PARAMLIST', 'int'): ('PARAMLIST', 'TYPE ident PARAMLIST2'),
 ('PARAMLIST', 'float'): ('PARAMLIST', 'TYPE ident PARAMLIST2'),
 ('PARAMLIST', 'string'): ('PARAMLIST', 'TYPE ident PARAMLIST2'),
 ('PARAMLIST2', ')'): ('PARAMLIST2', 'epslon'),
 ('PARAMLIST2', ','): ('PARAMLIST2', ', PARAMLIST'),
 ('STATEMENT', 'ident'): ('STATEMENT', 'ATRIBSTAT ;'),
 ('STATEMENT', '{'): ('STATEMENT', '{ STATELIST }'),
 ('STATEMENT', ';'): ('STATEMENT', ';'),
 ('STATEMENT', 'if'): ('STATEMENT',
  'if ( EXPRESSION ) { STATEMENT } ELSEPART'),
 ('STATEMENT', 'break'): ('STATEMENT', 'break ;'),
 ('STATEMENT', 'print'): ('STATEMENT', 'PRINTSTAT ;'),
 ('STATEMENT', 'read'): ('STATEMENT', 'READSTAT ;'),
 ('STATEMENT', 'return'): ('STATEMENT', 'RETURNSTAT ;'),
 ('STATEMENT', 'for'): ('STATEMENT', 'FORSTAT'),
 ('STATEMENT', 'int'): ('STATEMENT', 'VARDECL ;'),
 ('STATEMENT', 'float'): ('STATEMENT', 'VARDECL ;'),
 ('STATEMENT', 'string'): ('STATEMENT', 'VARDECL ;'),
 ('VARDECL', 'int'): ('VARDECL', 'TYPE ident VARDECL_LIST'),
 ('VARDECL', 'float'): ('VARDECL', 'TYPE ident VARDECL_LIST'),
 ('VARDECL', 'string'): ('VARDECL', 'TYPE ident VARDECL_LIST'),
 ('VARDECL_LIST', ';'): ('VARDECL_LIST', 'epslon'),
 ('VARDECL_LIST', '['): ('VARDECL_LIST', '[ int_constant ] VARDECL_LIST'),
 ('ATRIBSTAT', 'ident'): ('ATRIBSTAT', 'LVALUE = ATRIBSTATLIST'),
 ('ATRIBSTATLIST', 'ident'): ('ATRIBSTATLIST', 'FUNCALL'),
 ('ATRIBSTATLIST', '('): ('ATRIBSTATLIST', '( EXPRESSION )'),
 ('ATRIBSTATLIST', 'new'): ('ATRIBSTATLIST', 'ALLOCEXPRESSION'),
 ('FUNCALL', 'ident'): ('FUNCALL', 'ident ( PARAMLISTCALL )'),
 ('PARAMLISTCALL', 'ident'): ('PARAMLISTCALL', 'ident PARAMLISTCALL2'),
 ('PARAMLISTCALL', ')'): ('PARAMLISTCALL', 'epslon'),
 ('PARAMLISTCALL2', ')'): ('PARAMLISTCALL2', 'epslon'),
 ('PARAMLISTCALL2', ','): ('PARAMLISTCALL2', ', PARAMLISTCALL'),
 ('PRINTSTAT', 'print'): ('PRINTSTAT', 'print ( EXPRESSION )'),
 ('READSTAT', 'read'): ('READSTAT', 'read LVALUE'),
 ('RETURNSTAT', 'return'): ('RETURNSTAT', 'return'),
 ('ELSEPART', '$'): ('ELSEPART', 'epslon'),
 ('ELSEPART', 'ident'): ('ELSEPART', 'epslon'),
 ('ELSEPART', '{'): ('ELSEPART', 'epslon'),
 ('ELSEPART', '}'): ('ELSEPART', 'epslon'),
 ('ELSEPART', ';'): ('ELSEPART', 'epslon'),
 ('ELSEPART', 'if'): ('ELSEPART', 'epslon'),
 ('ELSEPART', 'break'): ('ELSEPART', 'epslon'),
 ('ELSEPART', 'print'): ('ELSEPART', 'epslon'),
 ('ELSEPART', 'read'): ('ELSEPART', 'epslon'),
 ('ELSEPART', 'return'): ('ELSEPART', 'epslon'),
 ('ELSEPART', 'else'): ('ELSEPART', 'else STATEMENT'),
 ('ELSEPART', 'for'): ('ELSEPART', 'epslon'),
 ('ELSEPART', 'int'): ('ELSEPART', 'epslon'),
 ('ELSEPART', 'float'): ('ELSEPART', 'epslon'),
 ('ELSEPART', 'string'): ('ELSEPART', 'epslon'),
 ('FORSTAT', 'for'): ('FORSTAT',
  'for ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT'),
 ('STATELIST', 'ident'): ('STATELIST', 'STATEMENT STATELIST2'),
 ('STATELIST', '{'): ('STATELIST', 'STATEMENT STATELIST2'),
 ('STATELIST', ';'): ('STATELIST', 'STATEMENT STATELIST2'),
 ('STATELIST', 'if'): ('STATELIST', 'STATEMENT STATELIST2'),
 ('STATELIST', 'break'): ('STATELIST', 'STATEMENT STATELIST2'),
 ('STATELIST', 'print'): ('STATELIST', 'STATEMENT STATELIST2'),
 ('STATELIST', 'read'): ('STATELIST', 'STATEMENT STATELIST2'),
 ('STATELIST', 'return'): ('STATELIST', 'STATEMENT STATELIST2'),
 ('STATELIST', 'for'): ('STATELIST', 'STATEMENT STATELIST2'),
 ('STATELIST', 'int'): ('STATELIST', 'STATEMENT STATELIST2'),
 ('STATELIST', 'float'): ('STATELIST', 'STATEMENT STATELIST2'),
 ('STATELIST', 'string'): ('STATELIST', 'STATEMENT STATELIST2'),
 ('STATELIST2', 'ident'): ('STATELIST2', 'STATELIST'),
 ('STATELIST2', '{'): ('STATELIST2', 'STATELIST'),
 ('STATELIST2', '}'): ('STATELIST2', 'epslon'),
 ('STATELIST2', ';'): ('STATELIST2', 'STATELIST'),
 ('STATELIST2', 'if'): ('STATELIST2', 'STATELIST'),
 ('STATELIST2', 'break'): ('STATELIST2', 'STATELIST'),
 ('STATELIST2', 'print'): ('STATELIST2', 'STATELIST'),
 ('STATELIST2', 'read'): ('STATELIST2', 'STATELIST'),
 ('STATELIST2', 'return'): ('STATELIST2', 'STATELIST'),
 ('STATELIST2', 'for'): ('STATELIST2', 'STATELIST'),
 ('STATELIST2', 'int'): ('STATELIST2', 'STATELIST'),
 ('STATELIST2', 'float'): ('STATELIST2', 'STATELIST'),
 ('STATELIST2', 'string'): ('STATELIST2', 'STATELIST'),
 ('ALLOCEXPRESSION', 'new'): ('ALLOCEXPRESSION',
  'new TYPE [ NUMEXPRESSION ] ALLOCEXPR_LIST'),
 ('ALLOCEXPR_LIST', ')'): ('ALLOCEXPR_LIST', 'epslon'),
 ('ALLOCEXPR_LIST', ';'): ('ALLOCEXPR_LIST', 'epslon'),
 ('ALLOCEXPR_LIST', '['): ('ALLOCEXPR_LIST',
  '[ NUMEXPRESSION ] ALLOCEXPR_LIST'),
 ('EXPRESSION', 'ident'): ('EXPRESSION', 'NUMEXPRESSION RELATIONAL_PART'),
 ('EXPRESSION', '('): ('EXPRESSION', 'NUMEXPRESSION RELATIONAL_PART'),
 ('EXPRESSION', 'int_constant'): ('EXPRESSION',
  'NUMEXPRESSION RELATIONAL_PART'),
 ('EXPRESSION', '+'): ('EXPRESSION', 'NUMEXPRESSION RELATIONAL_PART'),
 ('EXPRESSION', '-'): ('EXPRESSION', 'NUMEXPRESSION RELATIONAL_PART'),
 ('EXPRESSION', 'float_constant'): ('EXPRESSION',
  'NUMEXPRESSION RELATIONAL_PART'),
 ('EXPRESSION', 'string_constant'): ('EXPRESSION',
  'NUMEXPRESSION RELATIONAL_PART'),
 ('EXPRESSION', 'null'): ('EXPRESSION', 'NUMEXPRESSION RELATIONAL_PART'),
 ('RELATIONAL_PART', ')'): ('RELATIONAL_PART', 'epslon'),
 ('RELATIONAL_PART', ';'): ('RELATIONAL_PART', 'epslon'),
 ('RELATIONAL_PART', '<'): ('RELATIONAL_PART', 'RELATIONAL_OP NUMEXPRESSION'),
 ('RELATIONAL_PART', '>'): ('RELATIONAL_PART', 'RELATIONAL_OP NUMEXPRESSION'),
 ('RELATIONAL_PART', '<='): ('RELATIONAL_PART', 'RELATIONAL_OP NUMEXPRESSION'),
 ('RELATIONAL_PART', '>='): ('RELATIONAL_PART', 'RELATIONAL_OP NUMEXPRESSION'),
 ('RELATIONAL_PART', '=='): ('RELATIONAL_PART', 'RELATIONAL_OP NUMEXPRESSION'),
 ('RELATIONAL_PART', '!='): ('RELATIONAL_PART', 'RELATIONAL_OP NUMEXPRESSION'),
 ('NUMEXPRESSION', 'ident'): ('NUMEXPRESSION', 'TERM NUMEXPRESSION_LIST'),
 ('NUMEXPRESSION', '('): ('NUMEXPRESSION', 'TERM NUMEXPRESSION_LIST'),
 ('NUMEXPRESSION', 'int_constant'): ('NUMEXPRESSION',
  'TERM NUMEXPRESSION_LIST'),
 ('NUMEXPRESSION', '+'): ('NUMEXPRESSION', 'TERM NUMEXPRESSION_LIST'),
 ('NUMEXPRESSION', '-'): ('NUMEXPRESSION', 'TERM NUMEXPRESSION_LIST'),
 ('NUMEXPRESSION', 'float_constant'): ('NUMEXPRESSION',
  'TERM NUMEXPRESSION_LIST'),
 ('NUMEXPRESSION', 'string_constant'): ('NUMEXPRESSION',
  'TERM NUMEXPRESSION_LIST'),
 ('NUMEXPRESSION', 'null'): ('NUMEXPRESSION', 'TERM NUMEXPRESSION_LIST'),
 ('NUMEXPRESSION_LIST', ')'): ('NUMEXPRESSION_LIST', 'epslon'),
 ('NUMEXPRESSION_LIST', ';'): ('NUMEXPRESSION_LIST', 'epslon'),
 ('NUMEXPRESSION_LIST', ']'): ('NUMEXPRESSION_LIST', 'epslon'),
 ('NUMEXPRESSION_LIST', '<'): ('NUMEXPRESSION_LIST', 'epslon'),
 ('NUMEXPRESSION_LIST', '>'): ('NUMEXPRESSION_LIST', 'epslon'),
 ('NUMEXPRESSION_LIST', '<='): ('NUMEXPRESSION_LIST', 'epslon'),
 ('NUMEXPRESSION_LIST', '>='): ('NUMEXPRESSION_LIST', 'epslon'),
 ('NUMEXPRESSION_LIST', '=='): ('NUMEXPRESSION_LIST', 'epslon'),
 ('NUMEXPRESSION_LIST', '!='): ('NUMEXPRESSION_LIST', 'epslon'),
 ('NUMEXPRESSION_LIST', '+'): ('NUMEXPRESSION_LIST',
  'ADDITIVE_OP TERM NUMEXPRESSION_LIST'),
 ('NUMEXPRESSION_LIST', '-'): ('NUMEXPRESSION_LIST',
  'ADDITIVE_OP TERM NUMEXPRESSION_LIST'),
 ('TERM', 'ident'): ('TERM', 'UNARYEXPR TERM_LIST'),
 ('TERM', '('): ('TERM', 'UNARYEXPR TERM_LIST'),
 ('TERM', 'int_constant'): ('TERM', 'UNARYEXPR TERM_LIST'),
 ('TERM', '+'): ('TERM', 'UNARYEXPR TERM_LIST'),
 ('TERM', '-'): ('TERM', 'UNARYEXPR TERM_LIST'),
 ('TERM', 'float_constant'): ('TERM', 'UNARYEXPR TERM_LIST'),
 ('TERM', 'string_constant'): ('TERM', 'UNARYEXPR TERM_LIST'),
 ('TERM', 'null'): ('TERM', 'UNARYEXPR TERM_LIST'),
 ('TERM_LIST', ')'): ('TERM_LIST', 'epslon'),
 ('TERM_LIST', ';'): ('TERM_LIST', 'epslon'),
 ('TERM_LIST', ']'): ('TERM_LIST', 'epslon'),
 ('TERM_LIST', '<'): ('TERM_LIST', 'epslon'),
 ('TERM_LIST', '>'): ('TERM_LIST', 'epslon'),
 ('TERM_LIST', '<='): ('TERM_LIST', 'epslon'),
 ('TERM_LIST', '>='): ('TERM_LIST', 'epslon'),
 ('TERM_LIST', '=='): ('TERM_LIST', 'epslon'),
 ('TERM_LIST', '!='): ('TERM_LIST', 'epslon'),
 ('TERM_LIST', '+'): ('TERM_LIST', 'epslon'),
 ('TERM_LIST', '-'): ('TERM_LIST', 'epslon'),
 ('TERM_LIST', '*'): ('TERM_LIST', 'MULTIPLICATIVE_OP UNARYEXPR TERM_LIST'),
 ('TERM_LIST', '/'): ('TERM_LIST', 'MULTIPLICATIVE_OP UNARYEXPR TERM_LIST'),
 ('UNARYEXPR', 'ident'): ('UNARYEXPR', 'UNARY_OP FACTOR'),
 ('UNARYEXPR', '('): ('UNARYEXPR', 'UNARY_OP FACTOR'),
 ('UNARYEXPR', 'int_constant'): ('UNARYEXPR', 'UNARY_OP FACTOR'),
 ('UNARYEXPR', '+'): ('UNARYEXPR', 'UNARY_OP FACTOR'),
 ('UNARYEXPR', '-'): ('UNARYEXPR', 'UNARY_OP FACTOR'),
 ('UNARYEXPR', 'float_constant'): ('UNARYEXPR', 'UNARY_OP FACTOR'),
 ('UNARYEXPR', 'string_constant'): ('UNARYEXPR', 'UNARY_OP FACTOR'),
 ('UNARYEXPR', 'null'): ('UNARYEXPR', 'UNARY_OP FACTOR'),
 ('UNARY_OP', 'ident'): ('UNARY_OP', 'epslon'),
 ('UNARY_OP', '('): ('UNARY_OP', 'epslon'),
 ('UNARY_OP', 'int_constant'): ('UNARY_OP', 'epslon'),
 ('UNARY_OP', '+'): ('UNARY_OP', 'ADDITIVE_OP'),
 ('UNARY_OP', '-'): ('UNARY_OP', 'ADDITIVE_OP'),
 ('UNARY_OP', 'float_constant'): ('UNARY_OP', 'epslon'),
 ('UNARY_OP', 'string_constant'): ('UNARY_OP', 'epslon'),
 ('UNARY_OP', 'null'): ('UNARY_OP', 'epslon'),
 ('FACTOR', 'ident'): ('FACTOR', 'LVALUE'),
 ('FACTOR', '('): ('FACTOR', '( NUMEXPRESSION )'),
 ('FACTOR', 'int_constant'): ('FACTOR', 'CONSTANT'),
 ('FACTOR', 'float_constant'): ('FACTOR', 'CONSTANT'),
 ('FACTOR', 'string_constant'): ('FACTOR', 'CONSTANT'),
 ('FACTOR', 'null'): ('FACTOR', 'CONSTANT'),
 ('LVALUE', 'ident'): ('LVALUE', 'ident LVALUE_LIST'),
 ('LVALUE_LIST', ')'): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', ';'): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', '['): ('LVALUE_LIST', '[ NUMEXPRESSION ] LVALUE_LIST'),
 ('LVALUE_LIST', ']'): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', '='): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', '<'): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', '>'): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', '<='): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', '>='): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', '=='): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', '!='): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', '+'): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', '-'): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', '*'): ('LVALUE_LIST', 'epslon'),
 ('LVALUE_LIST', '/'): ('LVALUE_LIST', 'epslon'),
 ('RELATIONAL_OP', '<'): ('RELATIONAL_OP', '<'),
 ('RELATIONAL_OP', '>'): ('RELATIONAL_OP', '>'),
 ('RELATIONAL_OP', '<='): ('RELATIONAL_OP', '<='),
 ('RELATIONAL_OP', '>='): ('RELATIONAL_OP', '>='),
 ('RELATIONAL_OP', '=='): ('RELATIONAL_OP', '=='),
 ('RELATIONAL_OP', '!='): ('RELATIONAL_OP', '!='),
 ('ADDITIVE_OP', '+'): ('ADDITIVE_OP', '+'),
 ('ADDITIVE_OP', '-'): ('ADDITIVE_OP', '-'),
 ('MULTIPLICATIVE_OP', '*'): ('MULTIPLICATIVE_OP', '*'),
 ('MULTIPLICATIVE_OP', '/'): ('MULTIPLICATIVE_OP', '/'),
 ('TYPE', 'int'): ('TYPE', 'int'),
 ('TYPE', 'float'): ('TYPE', 'float'),
 ('TYPE', 'string'): ('TYPE', 'string'),
 ('CONSTANT', 'int_constant'): ('CONSTANT', 'int_constant'),
 ('CONSTANT', 'float_constant'): ('CONSTANT', 'float_constant'),
 ('CONSTANT', 'string_constant'): ('CONSTANT', 'string_constant'),
 ('CONSTANT', 'null'): ('CONSTANT', 'null')}
